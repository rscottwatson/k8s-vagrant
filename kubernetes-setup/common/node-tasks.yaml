---
- name: Install packages that allow apt to be used over HTTPS
  apt:
    state: present
    update_cache: yes
    pkg: 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - bash-completion

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: Install docker and its dependecies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce 
    - docker-ce-cli 
    - containerd.io

- name: Setup docker deamon
  blockinfile:
    dest: /etc/docker/daemon.json
    create: yes
    marker: ""
    block: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
  notify:
    - docker status

- name: Restart docker with cgroupdriver
  meta: flush_handlers

- name: Add vagrant user to docker group
  user:
    name: vagrant
    group: docker

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install latest Kubernetes binaries
  apt: 
    state: present
    update_cache: yes
    pkg:
      - kubelet 
      - kubeadm 
      - kubectl
  when: k8s_version | length == 0   


- name: Install specific Kubernetes binaries version 
  apt: 
    state: present
    update_cache: yes
    pkg:
      - "kubelet={{ k8s_version }}"
      - "kubeadm={{ k8s_version }}" 
      - "kubectl={{ k8s_version }}"
  when: k8s_version | length > 0 

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    create: yes
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted

